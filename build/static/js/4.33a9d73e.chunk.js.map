{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","textInputRef","useRef","shirtInputRef","tshirtInputRef","jeansInputRef","trouserInputRef","sweaterInputRef","towelInputRef","bedsheetInputRef","shortInputRef","objToday","Date","domEnder","a","test","parseInt","charAt","today","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","form","onFocus","console","log","onSubmit","event","preventDefault","enteredText","current","value","enteredShirt","enteredTshirt","enteredJeans","enteredTrouser","enteredSweater","enteredTowel","enteredShort","enteredBedsheet","totalVal","onAddQuote","shirt","tshirt","jeans","trouser","sweater","towel","short","bedsheet","date","request","total","isLoading","loading","LoadingSpinner","control","htmlFor","type","min","max","id","ref","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","history","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,sGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCmQ/BC,G,MA/PG,SAACL,GAGjB,IAAMM,EAAeC,mBACfC,EAAgBD,mBAChBE,EAAiBF,mBACjBG,EAAgBH,mBAChBI,EAAkBJ,mBAClBK,EAAkBL,mBAClBM,EAAgBN,mBAChBO,EAAmBP,mBACnBQ,EAAgBR,mBAGlBS,EAAW,IAAIC,KAUjBC,EAAY,WACV,IAAIC,EAAIH,EACR,MAAI,IAAII,KAAKC,UAAUF,EAAI,IAAIG,OAAO,KAAa,KAE5C,IADPH,EAAIE,UAAUF,EAAI,IAAIG,OAAO,KACb,KAAO,GAAKH,EAAI,KAAO,GAAKA,EAAI,KAAO,KAJ7C,GAyCVI,GAlCAA,GAASP,EAASQ,UAAY,IAC1B,IAAMR,EAASQ,UAAYN,EAC3BF,EAASQ,UAAYN,GAkC3B,IAjCS,CACP,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEgBF,EAASS,YAqB3B,KApBUT,EAASU,cAsBnB,KApBEV,EAASW,WAAa,GAClBX,EAASW,WAAa,GACtBX,EAASW,WAAa,GACtB,IAAMX,EAASW,WACfX,EAASW,YAkBf,KAhBEX,EAASY,aAAe,GACpB,IAAMZ,EAASY,aACfZ,EAASY,cAgBf,KAdEZ,EAASa,aAAe,GACpB,IAAMb,EAASa,aACfb,EAASa,eACDb,EAASW,WAAa,GAAK,KAAO,MA2DlD,OACE,eAAC,WAAD,WAEE,qBAAK1B,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sDAGJ,cAAC,EAAD,UACE,uBACEA,UAAWC,IAAQ4B,KACnBC,QAdmB,WACzBC,QAAQC,IAAI,WAcNC,SAvDR,SAA2BC,GACzBA,EAAMC,iBAGN,IAAMC,EAAc/B,EAAagC,QAAQC,MACnCC,EAAehC,EAAc8B,QAAQC,MACrCE,EAAgBhC,EAAe6B,QAAQC,MACvCG,EAAehC,EAAc4B,QAAQC,MACrCI,EAAiBhC,EAAgB2B,QAAQC,MACzCK,EAAiBhC,EAAgB0B,QAAQC,MACzCM,EAAehC,EAAcyB,QAAQC,MACrCO,EAAe/B,EAAcuB,QAAQC,MACrCQ,EAAkBjC,EAAiBwB,QAAQC,MAE3CS,GACHR,IACAM,IACAL,IACAC,IACAE,IACAC,IACAE,EAEHf,QAAQC,IAAIe,GAGZhD,EAAMiD,WAAW,CACfC,MAAOV,EACPW,OAAQV,EACRW,MAAOV,EACPW,QAASV,EACTW,QAASV,EACTW,MAAOV,EACPW,MAAOV,EACPW,SAAUV,EACVW,KAAMnC,EACNoC,QAAStB,EACTuB,MAAOZ,KAeL,UAKGhD,EAAM6D,WACL,qBAAK5D,UAAWC,IAAQ4D,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9D,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,mBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,QACHC,IAAK9D,OAIT,sBAAKP,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,SACHC,IAAK7D,OAIT,sBAAKR,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,mBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,QACHC,IAAK5D,OAIT,sBAAKT,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,sBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,WACHC,IAAK3D,OAIT,sBAAKV,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,SACHC,IAAKzD,OAIT,sBAAKZ,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,sBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,UACHC,IAAK1D,OAIT,sBAAKX,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,uBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,WACHC,IAAKxD,OAIT,sBAAKb,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,IAAI,IACJC,GAAG,SACHC,IAAKvD,OAeT,sBAAKd,UAAWC,IAAQ8D,QAAxB,UACE,uBAAOC,QAAQ,OAAf,8BACA,0BAAUI,GAAG,OAAOE,KAAK,IAAID,IAAKhE,OAEpC,qBAAKL,UAAWC,IAAQsE,QAAxB,SACE,wBAAQvE,UAAU,MAAlB,sC,gBCvOGwE,UAlBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAChBC,qBAAU,WACO,cAAXH,GACFC,EAAQ,aAET,CAACD,EAAQC,IAOZ,OACE,cAAC,EAAD,CAAWjB,UAAsB,YAAXgB,EAAsB5B,WAPtB,SAACgC,GACvBjD,QAAQC,IAAIgD,GACZL,EAAYK","file":"static/js/4.33a9d73e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2r3Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__125xr\",\"loading\":\"QuoteForm_loading__XrBZu\",\"control\":\"QuoteForm_control__1uCRJ\",\"actions\":\"QuoteForm_actions__1QW40\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef } from \"react\";\n// import { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport \"./QuoteForm.css\";\n\nconst QuoteForm = (props) => {\n  // const [isEntering, setIsEntering] = useState(false);\n  // const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const shirtInputRef = useRef();\n  const tshirtInputRef = useRef();\n  const jeansInputRef = useRef();\n  const trouserInputRef = useRef();\n  const sweaterInputRef = useRef();\n  const towelInputRef = useRef();\n  const bedsheetInputRef = useRef();\n  const shortInputRef = useRef();\n  // const dateInputRef = useRef();\n\n  var objToday = new Date(),\n    // weekday = [\n    //   \"Sunday\",\n    //   \"Monday\",\n    //   \"Tuesday\",\n    //   \"Wednesday\",\n    //   \"Thursday\",\n    //   \"Friday\",\n    //   \"Saturday\",\n    // ],\n    domEnder = (function () {\n      var a = objToday;\n      if (/1/.test(parseInt((a + \"\").charAt(0)))) return \"th\";\n      a = parseInt((a + \"\").charAt(1));\n      return 1 == a ? \"st\" : 2 == a ? \"nd\" : 3 == a ? \"rd\" : \"th\";\n    })(),\n    dayOfMonth =\n      today + (objToday.getDate() < 10)\n        ? \"0\" + objToday.getDate() + domEnder\n        : objToday.getDate() + domEnder,\n    months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n    curMonth = months[objToday.getMonth()],\n    curYear = objToday.getFullYear(),\n    curHour =\n      objToday.getHours() > 12\n        ? objToday.getHours() - 12\n        : objToday.getHours() < 10\n        ? \"0\" + objToday.getHours()\n        : objToday.getHours(),\n    curMinute =\n      objToday.getMinutes() < 10\n        ? \"0\" + objToday.getMinutes()\n        : objToday.getMinutes(),\n    curSeconds =\n      objToday.getSeconds() < 10\n        ? \"0\" + objToday.getSeconds()\n        : objToday.getSeconds(),\n    curMeridiem = objToday.getHours() > 12 ? \"PM\" : \"AM\";\n  var today =\n    dayOfMonth +\n    \" \" +\n    curMonth +\n    \", \" +\n    curYear +\n    \" \" +\n    curHour +\n    \":\" +\n    curMinute +\n    \".\" +\n    curSeconds +\n    curMeridiem;\n\n  // const d = new Date();\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    // const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    const enteredShirt = shirtInputRef.current.value;\n    const enteredTshirt = tshirtInputRef.current.value;\n    const enteredJeans = jeansInputRef.current.value;\n    const enteredTrouser = trouserInputRef.current.value;\n    const enteredSweater = sweaterInputRef.current.value;\n    const enteredTowel = towelInputRef.current.value;\n    const enteredShort = shortInputRef.current.value;\n    const enteredBedsheet = bedsheetInputRef.current.value;\n    // const enteredDate = dateInputRef.current.value;\n    const totalVal =\n      +enteredShirt +\n      +enteredShort +\n      +enteredTshirt +\n      +enteredJeans +\n      +enteredSweater +\n      +enteredTowel +\n      +enteredBedsheet;\n\n    console.log(totalVal);\n    // optional: Could validate here\n\n    props.onAddQuote({\n      shirt: enteredShirt,\n      tshirt: enteredTshirt,\n      jeans: enteredJeans,\n      trouser: enteredTrouser,\n      sweater: enteredSweater,\n      towel: enteredTowel,\n      short: enteredShort,\n      bedsheet: enteredBedsheet,\n      date: today,\n      request: enteredText,\n      total: totalVal,\n    });\n  }\n  const formFocusedHandler = () => {\n    console.log(\"Focus!\");\n  };\n  return (\n    <Fragment>\n      {/* <Prompt when={isEntering} /> */}\n      <div className=\"centered\">\n        <div className=\"quoteform\">\n          <p>Add Order Details</p>\n        </div>\n      </div>\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={formFocusedHandler}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Shirt</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"shirt\"\n              ref={shirtInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">T-Shirt</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"tshirt\"\n              ref={tshirtInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Jeans</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"jeans\"\n              ref={jeansInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Trousers</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"trousers\"\n              ref={trouserInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Towels</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"towels\"\n              ref={towelInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Sweaters</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"sweater\"\n              ref={sweaterInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">BedSheets</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"bedsheet\"\n              ref={bedsheetInputRef}\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Shorts</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              id=\"shorts\"\n              ref={shortInputRef}\n            />\n          </div>\n\n          {/* <div className={classes.control}>\n            <label htmlFor=\"date\">Date</label>\n            <input\n              type=\"date\"\n              // min=\"1\"\n              // max=\"9\"\n              id=\"date\"\n              ref={dateInputRef}\n            />\n          </div> */}\n\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Special Requests</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\">Create Order</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../Hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useNavigate();\n  useEffect(() => {\n    if (status === \"completed\") {\n      history(\"/orders\");\n    }\n  }, [status, history]);\n  const AddQuoteHandler = (quoteData) => {\n    console.log(quoteData);\n    sendRequest(quoteData);\n    // history.push(\"/quotes\");\n    // history(\"/quotes\");\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={AddQuoteHandler} />\n  );\n};\nexport default NewQuote;\n"],"sourceRoot":""}